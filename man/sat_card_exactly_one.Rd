% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sat-cardinality-constraints.R
\name{sat_card_exactly_one}
\alias{sat_card_exactly_one}
\alias{sat_card_atleast_one}
\alias{sat_card_atmost_one}
\title{Add to SAT problem the cardinality constraint for "exactly one", "at most one"
or "at least one" of the 
given variables is true}
\usage{
sat_card_exactly_one(sat, nms, method = "pairwise")

sat_card_atleast_one(sat, nms)

sat_card_atmost_one(sat, nms, method = "pairwise")
}
\arguments{
\item{sat}{\code{sat} object as created by \code{\link{sat_new}()}}

\item{nms}{character vector of variable names}

\item{method}{nethod to use to encode this constraint. Default: 'pairwise'
\describe{
  \item{\code{pairwise}}{Generates zero new variables, but \code{O(n^2)} new clauses}
  \item{\code{commander}}{Divide-and-conquer approach}
}}
}
\value{
a character vector of expression strings representing the cardinality constraint
        in conjunctive normal form
}
\description{
Add to SAT problem the cardinality constraint for "exactly one", "at most one"
or "at least one" of the 
given variables is true
}
\examples{
sat <- sat_new()

sat_card_exactly_one(sat, c('a', 'b', 'c', 'd'))
sat$exprs

sat <- sat_new()
sat_card_atleast_one(sat, c('a', 'b', 'c', 'd'))
sat$exprs

sat <- sat_new()
sat_card_atmost_one(sat, c('a', 'b', 'c', 'd'))
sat$exprs
}
\seealso{
Other SAT cardinality constraints: 
\code{\link{sat_card_exactly_k}()}
}
\concept{SAT cardinality constraints}
